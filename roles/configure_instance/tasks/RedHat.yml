---
- name: Setup hostname
  hostname:
    name: "{{ hostvars['localhost']['instance_name'] }}"
  when: hostvars['localhost']['instance_name'] is defined

- name: Install EPEL repo (to install Ansible)
  package:
    name: "{{ epel_repo }}"
    state: present
  register: result
  until: result is succeeded
  retries: 5
  delay: 10

- name: Install Docker CentOS8
  block:
    - name: Add Docker GPG key.
      rpm_key:
        key: https://download.docker.com/linux/centos/gpg
        state: present

    - name: Add Docker repository.
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: '/etc/yum.repos.d/docker-ce.repo'
        owner: root
        group: root
        mode: 0644

    - name: Enable Docker Edge repo
      ini_file:
        dest: /etc/yum.repos.d/docker-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0

    - name: Enable Docker Test repo
      ini_file:
        dest: /etc/yum.repos.d/docker-ce.repo
        section: 'docker-ce-test'
        option: enabled
        value: 0
 
    - name: Install containerd.io package manually
      package:
        name: https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.13-3.2.el7.x86_64.rpm
        state: present

    - name: Install Docker
      package:
        name:
        - docker-ce
        state: present
  when: ansible_facts['distribution_version'] >= 8.0
  # when: ansible_distribution_major_version | int == 8
  ignore_errors: yes

- name: Install Docker CentOS7
  block:
    - name: Install Docker
      package:
        name:
        - docker
        state: present
  when: ansible_facts['distribution_version'] < 8.0
  ignore_errors: yes

- name: Install base packages
  package:
    name:
      - git
      - wget
      - tree
      - python3-pip
      - python3-devel
      - ansible
      - gcc
      - bind-utils
    state: present
  register: package_check
  until: package_check is not failed
  retries: 4
  delay: 5

- name: Install Python dependencies
  pip:
    name:
      - absl-py
      - ipaddress
      - capirca
      - ansible
    executable: pip3

- name: Update Ansible Interpeter for {{ user }} user
  blockinfile:
    path: "/home/{{ user }}/.ansible.cfg"
    create: yes
    block: |
      [defaults]
      interpreter_python=/usr/bin/python3
      ansible_python_interpreter=/usr/bin/python3

# https://blog.thewatertower.org/2019/06/08/using-red-hat-universal-base-images/
- name: Create empty redhat-uep.pem file to run universal base images
  file:
    path: /etc/rhsm/ca/redhat-uep.pem
    state: touch
    mode: u=rw,g=r,o=r

- name: Change file ownership and group for Ansible config
  file:
    path: "/home/{{ user }}/.ansible.cfg"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rw,g=r,o=r

- name: Ensure group "docker" exists
  group:
    name: docker
    state: present

- name: Append user {{ user }} to the group 'docker'
  user:
    name: "{{ user }}"
    groups: docker
    append: yes

- name: Ensure Docker is started and enabled at boot
  service:
    name: docker
    state: started
    enabled: true

- name: Print the public IP address
  debug:
    msg: "TO CONNECT: ssh {{ user }}@{{ ansible_host }}"