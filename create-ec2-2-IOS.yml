# Play 1: Create the routers
- name: Create EC2 instance(s)
  hosts: localhost
  connection: local
  become: false
  gather_facts: true
  vars_files:
    - ./vars/sw_version.yml
    - ./vars/aws_common.yml
  vars:
   - ec2_instance_type: c4.large
   - ec2_ami_id: "{{ map['CSR_16_12'] }}"
   - ec2_name_tag: nleiva-cisco-ios
   - ec2_ansible_group_tag: Routers
   - ec2_username: ec2-user

  # roles:
  #     - { role: install_dependencies, become: yes }

  tasks:
    - name: Loop to create N=2 instances
      ansible.builtin.include_tasks: create-ec2-2-IOS-tasks.yml
      loop:
        - 1
        - 2
      loop_control:
        loop_var: router_number

    - name: Grab all network interfaces for VPC (NETWORKING MODE)
      amazon.aws.ec2_eni_facts:
        region: "{{ ec2_region }}"
        filters:
          vpc-id: "{{ create_vpc.vpc.id }}"
      register: eni_facts

    - name: Disable Source/Dest check on instances (NETWORKING MODE)
      amazon.aws.ec2_eni:
        eni_id: "{{ item['network_interface_id'] }}"
        region: "{{ ec2_region }}"
        source_dest_check: false
      with_items:
      - "{{ eni_facts['network_interfaces'] }}"

# Play 2: Configure routers we just created
- name: Configure Router(s)
  hosts: "my_routers"
  connection: network_cli
  become: true
  strategy: free
  become_method: enable
  gather_facts: true

  tasks:
    - name: Display variables/facts for each router
      ansible.builtin.debug:
        msg: "Running {{ ansible_net_model }} {{ ansible_net_version }}, IP address: {{ ansible_host }}"

    - name: Configure routers
      ansible.builtin.include_role:
        name: configure_routers

    - name: Routers access details
      ansible.builtin.debug:
        msg: "{{ short_name }} -> {{ access }}"

    - name: Print out SSH access details
      ansible.builtin.debug:
        msg: "{{ hostvars[inventory_hostname]['instance_ssh'] }}"
      when: hostvars[inventory_hostname]['instance_ssh'] is defined

    - name: Send report e-mail using SendGrid
      community.general.sendgrid:
        api_key: "{{ sendgrid_api_key }}"
        from_address: "{{ sendgrid_from_address }}"
        to_addresses: "{{ sendgrid_to_address }}"
        subject: "{{ sendgrid_email_subject }}"
        # attachments:
        # - test.yml
        body: "{{ lookup('template', 'report.j2') }}"
        html_body: true
      delegate_to: localhost
      run_once: true
